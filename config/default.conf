# user  nginx; # 프로세스의 실행되는 권한. 보안상 root를 사용하지 않습니다.
# worker_processes  1;
# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;

# events {
#     worker_connections  1024;
# }

# URL 리디렉션은 기존 URL을 다른 URL과 연결 지어 방문자와 Google 검색에 페이지의
# 위치가 새로 지정되었음을 효과적으로 알리는 방법입니다.
# 리디렉션은 다음 상황에서 특히 유용합니다.
# 사이트를 새로운 도메인으로 옮기고 사이트 이전을 최대한 원활하게 진행하고자 하는 경우
# 사용자가 여러 다른 URL을 통해 사이트에 액세스하는 경우: 예를 들어, http://example.com/home, http://home.example.com 또는 http://www.example.com과 같이 여러 방법으로 홈페이지에 액세스할 수 있다면 이러한 URL 중 하나를 선호(표준)하는 목적지로 선택하고 301 리디렉션을 사용하여 다른 URL에서 선호하는 URL로 트래픽을 전송하는 것이 좋습니다.
# 두 웹사이트를 통합하면서 이전 URL 링크가 정확한 페이지로 리디렉션되게 하려는 경우
# 페이지를 삭제하여 사용자를 새 페이지로 유도하려는 경우

server {

	listen localhost:8080;
	server_name default_server;

	location / {
		root www;
		method GET;
		index index.html;
		autoindex on;
	}

	location /post {
		root www;
		method POST;
		max_body 90000;
	}

	location /delete {
		root www;
		method DELETE;
	}

	location /redirect {
		root www;
		return 301 /;
	}
	
	cgi .php {
		root www/cgi-bin;
		methods GET POST
	}
	
	error_page 500 502 503 504  /50x.html;
	location /50x.html {
		root html;
	}

	error_page 404 /404.html;
	location /404.html {
		root /usr/share/nginx/html/;
	}

	error_page 500 502 503 504 /50x.html;
	location /50x.html {
		
	}

}

server {
	listen error:8001
	server_name error_server;
	error_page 400 401 402 403 404;
	
	location / {
		root www;
		methods GET;
		index error.html;
		autoindex on;
	}
}
